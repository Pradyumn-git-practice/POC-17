name: Project 17

on: push
env:
  AWS_REGION: ${{vars.AWS_REGION}}
  ECR_REGISTRY: ${{vars.ECR_REGISTRY}}
  SONAR_HOST_URL: ${{vars.SONAR_HOST_URL}}
  SONAR_PROJECT_KEY: ${{vars.SONAR_PROJECT_KEY}}


jobs:
    Build-and-Deploy:
        runs-on: [self-hosted,ec2-label]
        steps:
            - name: Checkout stage
              uses: actions/checkout@v2

            - name: sonarscan
              uses: sonarsource/sonarqube-scan-action@v4.2.0
              with:
                args: >
                    -Dsonar.projectKey=poc-17
                    -Dsonar.sources=.
                    -Dsonar.java.binaries=target/classes
                    -Dsonar.qualitygate.wait=true
              env:
                SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
                SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
            


            - name: Docker build Imange
              run: docker build -t ${{env.ECR_REGISTRY}}:${{github.run_number}} .

            - name: Trivy Scan
              run: trivy image --exit-code 0 --severity HIGH,CRITICAL --format json -o trivy-report.json ${{ env.ECR_REGISTRY }}:${{ github.run_number }}

            - name: ECR Login
              run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{env.ECR_REGISTRY}}


            - name: Docker Push
              run: docker push ${{env.ECR_REGISTRY}}:${{github.run_number}}

            - name: Deploy Stage
              run: |
                sed "s|IMAGE_TAG|${{github.run_number}}|g" k8/deployment.yml > k8/deployment.generated.yaml
                kubectl apply -f k8/deployment.generated.yaml